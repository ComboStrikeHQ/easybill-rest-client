{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "easybill REST API",
        "description": "Authenticate with HTTP Basic Auth.\n* Username: `easybill email`\n  \n* Password: `SOAP API key`\n"
    },
    "tags": [
        {
            "name": "customer",
            "description": "Everything about your customers"
        },
        {
            "name": "customer group",
            "description": "Groups for customer"
        },
        {
            "name": "document",
            "description": "Invoices, offers, etc."
        },
        {
            "name": "document payment"
        },
        {
            "name": "position"
        },
        {
            "name": "position group"
        },
        {
            "name": "project"
        },
        {
            "name": "task"
        },
        {
            "name": "text template"
        },
        {
            "name": "time tracking"
        }
    ],
    "host": "api.easybill.de",
    "basePath": "/rest/v1",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "paths": {
        "/customers": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Fetch customers list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customers"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Create customer",
                "description": "",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid Customer"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/customers/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Fetch customer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid Customer"
                    }
                }
            },
            "delete": {
                "tags": [
                    "customer"
                ],
                "summary": "Delete customer",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer that needs to be deleted",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/customers/{customerId}/contacts": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Fetch customer contact list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "description": "ID of customer that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contacts"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Create new contact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "description": "ID of customer",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Invalid contact"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/customers/{customerId}/contacts/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Fetch contact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "description": "ID of customer",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of contact",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "contact"
                ],
                "summary": "Update Contact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "description": "ID of customer",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of contact",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Invalid contact"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contact"
                ],
                "summary": "Delete contact",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "customerId",
                        "description": "ID of customer",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of contact",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/documents": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "Fetch documents list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "description": "Filter documents by type. Multiple typs seperate with , like type=INVOICE,CREDIT.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "INVOICE",
                            "RECURRING",
                            "CREDIT",
                            "OFFER",
                            "REMINDER",
                            "DUNNING",
                            "STORNO",
                            "DELIVERY",
                            "PDF",
                            "CHARGE",
                            "CHARGE_CONFIRM",
                            "LETTER",
                            "ORDER"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "is_draft",
                        "description": "Filter documents by draft flag.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "customer_id",
                        "description": "Filter documents by customer_id. You can add multiple customer_is separate by comma like id,id,id.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "document_date",
                        "description": "Filter documents by document_date. You can filter one date with document_date=2014-12-10 or between like 2015-01-01,2015-12-31.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Documents"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Create document",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/documents/{id}": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "Fetch document",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "document"
                ],
                "summary": "Update document",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "400": {
                        "description": "Invalid Document"
                    }
                }
            },
            "delete": {
                "tags": [
                    "document"
                ],
                "summary": "Delete document",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/documents/{id}/done": {
            "put": {
                "tags": [
                    "document"
                ],
                "summary": "Mark document as done",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/documents/{id}/cancel": {
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Cancel document",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/documents/{id}/send/{type}": {
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Send document",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "email",
                            "fax",
                            "post"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostBox"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/documents/{id}/pdf": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "Fetch pdf document",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/customer-groups": {
            "get": {
                "tags": [
                    "customer group"
                ],
                "summary": "Fetch customer group list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroups"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "customer group"
                ],
                "summary": "Create customer froup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroup"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/customer-groups/{id}": {
            "get": {
                "tags": [
                    "customer group"
                ],
                "summary": "Fetch customer group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroup"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "customer group"
                ],
                "summary": "Update customer group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer goup",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid customer group"
                    }
                }
            },
            "delete": {
                "tags": [
                    "customer group"
                ],
                "summary": "Delete customer group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of customer group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Fetch tasks list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tasks"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "task"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Fetch task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of task",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "task"
                ],
                "summary": "Update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of task",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Invalid task"
                    }
                }
            },
            "delete": {
                "tags": [
                    "task"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of task",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Fetch projects list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Projects"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/projects/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Fetch project",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of project",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of project",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "400": {
                        "description": "Invalid project"
                    }
                }
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of project",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "tags": [
                    "position"
                ],
                "summary": "Fetch positions list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Positions"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "position"
                ],
                "summary": "Create position",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/positions/{id}": {
            "get": {
                "tags": [
                    "position"
                ],
                "summary": "Fetch position",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "position"
                ],
                "summary": "Update position",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Position"
                        }
                    },
                    "400": {
                        "description": "Invalid position"
                    }
                }
            },
            "delete": {
                "tags": [
                    "position"
                ],
                "summary": "Delete position",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/position-groups": {
            "get": {
                "tags": [
                    "position group"
                ],
                "summary": "Fetch position group list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PositionGroups"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "position group"
                ],
                "summary": "Create position group",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PositionGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PositionGroup"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/position-groups/{id}": {
            "get": {
                "tags": [
                    "position group"
                ],
                "summary": "Fetch position group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PositionGroup"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "position group"
                ],
                "summary": "Update position group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position goup",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PositionGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PositionGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid position group"
                    }
                }
            },
            "delete": {
                "tags": [
                    "position group"
                ],
                "summary": "Delete position group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of position group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/time-trackings": {
            "get": {
                "tags": [
                    "time tracking"
                ],
                "summary": "Fetch time trackings list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeTrackings"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "time tracking"
                ],
                "summary": "Create time tracking",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeTracking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeTracking"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/time-trackings/{id}": {
            "get": {
                "tags": [
                    "time tracking"
                ],
                "summary": "Fetch time tracking",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of time tracking",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeTracking"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "time tracking"
                ],
                "summary": "Update time tracking",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of time tracking",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeTracking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeTracking"
                        }
                    },
                    "400": {
                        "description": "Invalid time tracking"
                    }
                }
            },
            "delete": {
                "tags": [
                    "time tracking"
                ],
                "summary": "Delete time tracking",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of time tracking",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/text-templates": {
            "get": {
                "tags": [
                    "text template"
                ],
                "summary": "Fetch text templates list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TextTemplates"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "text template"
                ],
                "summary": "Create text template",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TextTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TextTemplate"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/text-templates/{id}": {
            "get": {
                "tags": [
                    "text template"
                ],
                "summary": "Fetch text template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of text template",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TextTemplate"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "text template"
                ],
                "summary": "Update text template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of text template",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TextTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TextTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid text template"
                    }
                }
            },
            "delete": {
                "tags": [
                    "text template"
                ],
                "summary": "Delete text template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of text template",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/attachments": {
            "get": {
                "tags": [
                    "attachment"
                ],
                "summary": "Fetch attachments list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachments"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "attachment"
                ],
                "summary": "Create attachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/attachments/{id}": {
            "get": {
                "tags": [
                    "attachment"
                ],
                "summary": "Fetch attachment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of attachment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "attachment"
                ],
                "summary": "Update attachment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of attachment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "400": {
                        "description": "Invalid attachment"
                    }
                }
            },
            "delete": {
                "tags": [
                    "attachment"
                ],
                "summary": "Delete attachment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of attachment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/attachments/{id}/content": {
            "get": {
                "tags": [
                    "attachment"
                ],
                "summary": "Fetch attachment content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of attachment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/document-payments": {
            "get": {
                "tags": [
                    "document payment"
                ],
                "summary": "Fetch document payments list",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/DocumentPayments"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "document payment"
                ],
                "summary": "Create document payment",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentPayment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/DocumentPayment"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/document-payments/{id}": {
            "get": {
                "tags": [
                    "document payment"
                ],
                "summary": "Fetch document payment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document payment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/DocumentPayment"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "document payment"
                ],
                "summary": "Delete document payment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of document payment",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "List": {
            "type": "object",
            "required": [
                "page",
                "pages",
                "limit",
                "total"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "description": "The current page",
                    "example": 1
                },
                "pages": {
                    "type": "integer",
                    "description": "Max possible pages",
                    "example": 1
                },
                "limit": {
                    "type": "integer",
                    "description": "Items limitation. Max 1000",
                    "example": 100
                },
                "total": {
                    "type": "integer",
                    "description": "Total Items",
                    "example": 20
                }
            }
        },
        "Customer": {
            "type": "object",
            "required": [
                "last_name",
                "company_name"
            ],
            "properties": {
                "acquire_options": {
                    "type": "string",
                    "description": "1: Empfehlung eines anderen Kunden, 2: Zeitungsanzeige, 3: ...",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8"
                    ],
                    "x-nullable": true
                },
                "bank_account": {
                    "type": "string"
                },
                "bank_account_owner": {
                    "type": "string"
                },
                "bank_bic": {
                    "type": "string"
                },
                "bank_code": {
                    "type": "string"
                },
                "bank_iban": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string",
                    "format": "date"
                },
                "cash_allowance": {
                    "type": "string"
                },
                "cash_allowance_days": {
                    "type": "string"
                },
                "cash_discount": {
                    "type": "string"
                },
                "cash_discount_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string",
                    "example": "easybill GmbH"
                },
                "country": {
                    "type": "string"
                },
                "delivery_city": {
                    "type": "string"
                },
                "delivery_company_name": {
                    "type": "string"
                },
                "delivery_country": {
                    "type": "string"
                },
                "delivery_first_name": {
                    "type": "string"
                },
                "delivery_last_name": {
                    "type": "string"
                },
                "delivery_personal": {
                    "type": "string"
                },
                "delivery_salutation": {
                    "type": "string"
                },
                "delivery_street": {
                    "type": "string"
                },
                "delivery_suffix_1": {
                    "type": "string"
                },
                "delivery_suffix_2": {
                    "type": "string"
                },
                "delivery_zip_code": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "maxItems": 3,
                        "uniqueItems": true
                    }
                },
                "fax": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "info_1": {
                    "type": "string"
                },
                "info_2": {
                    "type": "string"
                },
                "internet": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "example": "Mustermann"
                },
                "mobile": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "payment_options": {
                    "type": "string"
                },
                "personal": {
                    "type": "boolean"
                },
                "phone_1": {
                    "type": "string"
                },
                "phone_2": {
                    "type": "string"
                },
                "postbox": {
                    "type": "string"
                },
                "postbox_city": {
                    "type": "string"
                },
                "postbox_country": {
                    "type": "string"
                },
                "postbox_zip_code": {
                    "type": "string"
                },
                "sale_price_level": {
                    "type": "string"
                },
                "salutation": {
                    "type": "string"
                },
                "sepa_agreement": {
                    "type": "string",
                    "enum": [
                        "BASIC",
                        "COR1",
                        "COMPANY"
                    ],
                    "description": "BASIC = SEPA-Basislastschrift, COR1 = SEPA-Basislastschrift COR1, COMPANY = SEPA-Firmenlastschrift, NULL = Noch kein Mandat erteilt",
                    "example": "COR1"
                },
                "sepa_agreement_date": {
                    "type": "string",
                    "format": "date"
                },
                "sepa_mandate_reference": {
                    "type": "string"
                },
                "since_date": {
                    "type": "string",
                    "format": "date"
                },
                "street": {
                    "type": "string"
                },
                "suffix_1": {
                    "type": "string"
                },
                "suffix_2": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                },
                "tax_options": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "vat_identifier": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "Customers": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                }
            ]
        },
        "Contact": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "maxItems": 3,
                        "uniqueItems": true
                    }
                },
                "fax": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_name": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "personal": {
                    "type": "string"
                },
                "phone_1": {
                    "type": "string"
                },
                "phone_2": {
                    "type": "string"
                },
                "salutation": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "suffix_1": {
                    "type": "string"
                },
                "suffix_2": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "Contacts": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    }
                }
            ]
        },
        "DocumentPosition": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "float"
                },
                "unit": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "single_price_net": {
                    "type": "number",
                    "format": "float"
                },
                "single_price_gross": {
                    "type": "number",
                    "format": "float"
                },
                "vat_percent": {
                    "type": "number",
                    "format": "float"
                },
                "discount": {
                    "type": "number",
                    "format": "float"
                },
                "discount_type": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_price_net": {
                    "type": "number",
                    "format": "float"
                },
                "total_price_gross": {
                    "type": "number",
                    "format": "float"
                },
                "total_vat": {
                    "type": "number",
                    "format": "float"
                },
                "serial_number_id": {
                    "type": "string"
                },
                "serial_number": {
                    "type": "string"
                },
                "booking_account": {
                    "type": "string"
                },
                "export_cost_1": {
                    "type": "string"
                },
                "export_cost_2": {
                    "type": "string"
                },
                "cost_price_net": {
                    "type": "number",
                    "format": "float"
                },
                "cost_price_total": {
                    "type": "number",
                    "format": "float"
                },
                "cost_price_charge": {
                    "type": "number",
                    "format": "float"
                },
                "cost_price_charge_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DocumentAddress": {
            "type": "object",
            "properties": {
                "salutation": {
                    "type": "string"
                },
                "personal": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "suffix1": {
                    "type": "string"
                },
                "suffix2": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "DocumentRecurring": {
            "type": "object",
            "properties": {
                "next_date": {
                    "type": "string",
                    "format": "date"
                },
                "frequency": {
                    "type": "string"
                },
                "frequency_special": {
                    "type": "string",
                    "enum": [
                        "LASTDAYOFMONTH"
                    ]
                },
                "interval": {
                    "type": "integer"
                },
                "end_date_or_count": {
                    "type": "string",
                    "description": "Date of last exectution day or number of times to exectute"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "RUNNING",
                        "PAUSE",
                        "STOP",
                        "WAITING"
                    ]
                },
                "as_draft": {
                    "type": "boolean"
                },
                "is_notify": {
                    "type": "boolean"
                },
                "send_as": {
                    "type": "string",
                    "enum": [
                        "EMAIL",
                        "FAX",
                        "POST"
                    ]
                },
                "is_sign": {
                    "type": "boolean"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "is_sepa": {
                    "type": "boolean"
                },
                "sepa_local_instrument": {
                    "type": "string",
                    "enum": [
                        "FRST",
                        "OOFF",
                        "FNAL",
                        "RCUR"
                    ]
                },
                "sepa_sequence_type": {
                    "type": "string",
                    "enum": [
                        "CORE",
                        "COR1",
                        "B2B"
                    ]
                },
                "sepa_reference": {
                    "type": "string"
                },
                "sepa_remittance_information": {
                    "type": "string"
                }
            }
        },
        "Document": {
            "type": "object",
            "properties": {
                "address": {
                    "readOnly": true,
                    "$ref": "#/definitions/DocumentAddress"
                },
                "label_address": {
                    "readOnly": true,
                    "$ref": "#/definitions/DocumentAddress"
                },
                "amount": {
                    "type": "string"
                },
                "amount_net": {
                    "type": "string"
                },
                "bank_debit_form": {
                    "type": "string"
                },
                "cash_allowance": {
                    "type": "string"
                },
                "cash_allowance_days": {
                    "type": "string"
                },
                "cash_allowance_text": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "contact_label": {
                    "type": "string"
                },
                "contact_text": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "discount": {
                    "type": "string"
                },
                "discount_type": {
                    "type": "string"
                },
                "document_date": {
                    "type": "string",
                    "format": "date"
                },
                "due_date": {
                    "type": "string",
                    "format": "date"
                },
                "edited_at": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_archive": {
                    "type": "boolean"
                },
                "is_draft": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentPosition"
                    }
                },
                "number": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "string"
                },
                "paid_at": {
                    "type": "string",
                    "format": "date"
                },
                "pdf_pages": {
                    "type": "integer"
                },
                "pdf_template": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "recurring_options": {
                    "type": "object",
                    "$ref": "#/definitions/DocumentRecurring",
                    "description": "This object is only available in document type RECURRING"
                },
                "ref_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Reference document id"
                },
                "status": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "text_prefix": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "INVOICE",
                        "RECURRING",
                        "CREDIT",
                        "OFFER",
                        "REMINDER",
                        "DUNNING",
                        "STORNO",
                        "DELIVERY",
                        "CHARGE",
                        "CHARGE_CONFIRM",
                        "LETTER",
                        "ORDER"
                    ]
                },
                "vat_option": {
                    "type": "string"
                }
            }
        },
        "Documents": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Document"
                            }
                        }
                    }
                }
            ]
        },
        "CustomerGroup": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CustomerGroups": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerGroup"
                            }
                        }
                    }
                }
            ]
        },
        "Task": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "category_custom": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "document_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "end_at": {
                    "type": "string"
                },
                "finish_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "priority": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "start_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_percent": {
                    "type": "string"
                }
            }
        },
        "Tasks": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Task"
                            }
                        }
                    }
                }
            ]
        },
        "Project": {
            "type": "object",
            "properties": {
                "budget_amount": {
                    "type": "string"
                },
                "budget_time": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "hourly_rate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "Projects": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                }
            ]
        },
        "Position": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "TEXT",
                        "PRODUCT",
                        "SERVICE"
                    ]
                },
                "title": {
                    "description": "Only by TEXT",
                    "type": "string"
                },
                "number": {
                    "description": "Only by SERVICE and PRODUCT",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "export_identifier": {
                    "type": "string"
                },
                "price_type": {
                    "type": "string"
                },
                "vat_percent": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price2": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price3": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price4": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price5": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price6": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price7": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price8": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price9": {
                    "type": "number",
                    "format": "float"
                },
                "sale_price10": {
                    "type": "number",
                    "format": "float"
                },
                "export_cost1": {
                    "type": "string"
                },
                "export_cost2": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "stock": {
                    "type": "string"
                },
                "stock_count": {
                    "type": "string"
                },
                "stock_limit_notify": {
                    "type": "string"
                },
                "stock_limit": {
                    "type": "string"
                }
            }
        },
        "Positions": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Position"
                            }
                        }
                    }
                }
            ]
        },
        "PositionGroup": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PositionGroups": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PositionGroup"
                            }
                        }
                    }
                }
            ]
        },
        "TimeTracking": {
            "type": "object",
            "properties": {
                "cleared_at": {
                    "type": "string"
                },
                "count": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "date_from_at": {
                    "type": "string"
                },
                "date_thru_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hourly_rate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "note": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "timer_value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "TimeTrackings": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeTracking"
                            }
                        }
                    }
                }
            ]
        },
        "TextTemplate": {
            "type": "object",
            "properties": {
                "can_modify": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "TextTemplates": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TextTemplate"
                            }
                        }
                    }
                }
            ]
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "customer_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "document_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "file_name": {
                    "type": "string",
                    "example": "my_doc.pdf",
                    "readOnly": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "size": {
                    "type": "integer",
                    "example": 10022,
                    "description": "In byte",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "example": "My doc"
                }
            }
        },
        "Attachments": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            ]
        },
        "DocumentPayment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "document_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "notice": {
                    "type": "string"
                },
                "payment_at": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "DocumentPayments": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/List"
                },
                {
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentPayment"
                            }
                        }
                    }
                }
            ]
        },
        "PostBox": {
            "type": "object",
            "properties": {
                "to": {
                    "type": "string"
                },
                "cc": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                }
            }
        }
    }
}
